name: Test BEDBASE stack

on:
  workflow_dispatch:
    inputs:
      bedstat_branch:
        description: 'bedstat branch to checkout'     
        required: true
        default: 'master'
      bedbuncher_branch:
        description: 'bedbuncher branch to checkout'     
        required: true
        default: 'master'

jobs:
  pytest:
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest] # can't use macOS when using service containers or container jobs
        r: [release]
    runs-on: ${{ matrix.os }}
    services:
        postgres:
          image: postgres
          env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: bedbasepassword
            POSTGRES_DB: postgres
          ports:
          - 5432:5432
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2

    - name: Checkout bedstat@${{ github.event.inputs.bedstat_branch }}
      uses: actions/checkout@v2
      with:
        repository: databio/bedstat
        ref: ${{ github.event.inputs.bedstat_branch }}
        path: bedstat

    # - name: Checkout bedbuncher@${{ github.event.inputs.bedbuncher_branch }}
    #   uses: actions/checkout@v2
    #   with:
    #     repository: databio/bedbuncher
    #     ref: ${{ github.event.inputs.bedbuncher_branch }}
    #     path: bedbuncher

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install bedstat dependancies
      run: if [ -f bedstat/requirements/requirements-all.txt ]; then pip install -r bedstat/requirements/requirements-all.txt; fi

    - name: Install bedstat dev dependancies
      run: if [ -f bedstat/requirements/requirements-dev.txt ]; then pip install -r bedstat/requirements/requirements-dev.txt; fi

    - name: Install bedstat test dependancies
      run: if [ -f bedstat/requirements/requirements-test.txt ]; then pip install -r bedstat/requirements/requirements-test.txt; fi

    # - name: Install bedbuncher dependancies
    #   run: if [ -f bedbuncher/requirements/requirements-all.txt ]; then pip install -r bedbuncher/requirements/requirements-all.txt; fi

    # - name: Install bedbuncher dev dependancies
    #   run: if [ -f bedbuncher/requirements/requirements-dev.txt ]; then pip install -r bedbuncher/requirements/requirements-dev.txt; fi

    # - name: Install bedbuncher test dependancies
    #   run: if [ -f bedbuncher/requirements/requirements-test.txt ]; then pip install -r bedbuncher/requirements/requirements-test.txt; fi

    - name: Install libcurl
      run: sudo apt-get install libcurl4-openssl-dev

    - name: Set up R ${{ matrix.r-version }}
      uses: r-lib/actions/setup-r@master
      with:
        r-version: ${{ matrix.r }}

    - name: Install R dependancies
      run: Rscript bedstat/scripts/installRdeps.R

    - name: Run bedstat pipeline
      run: looper run -p local ci/cfg/bedstat_config.yaml

    - name: Test plots exist
      run: |
        if ls $GITHUB_WORKSPACE/ci/outputs/bedstat_output/a6a08126cb6f4b1953ba0ec8675df85a/test_hg38*.png 1> /dev/null 2>&1; then
          echo "SUCCESS";
        else
          echo "ERROR: files do not exist: $GITHUB_WORKSPACE/outputs/bedstat_output/a6a08126cb6f4b1953ba0ec8675df85a/test_hg38*.png";
          exit 1
        fi

    - name: Test record in PostgreSQL
      run: |
        echo "from bbconf import BedBaseConf; from bbconf.const import *; bbc = BedBaseConf('$GITHUB_WORKSPACE/ci/cfg/config_min.yaml'); assert len(bbc.select(table_name=BED_TABLE, columns='id')) == 1, 'Number of records in the bedfiles table not equal 1'" | python3 -

    # - name: Run bedbuncher pipeline
    #   run: looper run -p local ci/cfg/bedbuncher_config.yaml
